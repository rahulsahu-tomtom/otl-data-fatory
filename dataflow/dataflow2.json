{
	"name": "dataflow2",
	"properties": {
		"folder": {
			"name": "Test"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzurePostgreSql1",
						"type": "LinkedServiceReference"
					},
					"name": "person1"
				},
				{
					"linkedService": {
						"referenceName": "AzurePostgreSql1",
						"type": "LinkedServiceReference"
					},
					"name": "person2"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzurePostgreSql1",
						"type": "LinkedServiceReference"
					},
					"name": "person12"
				}
			],
			"transformations": [
				{
					"name": "personsjoin"
				}
			],
			"scriptLines": [
				"source(output(",
				"          personid as integer,",
				"          lastname as string,",
				"          firstname as string,",
				"          address as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     format: 'table',",
				"     tableName: 'persons1',",
				"     schemaName: 'public',",
				"     store: 'postgres',",
				"     isolationLevel: 'READ_COMMITTED') ~> person1",
				"source(output(",
				"          personid as integer,",
				"          lastname as string,",
				"          firstname as string,",
				"          address as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     tableName: 'persons2',",
				"     schemaName: 'public',",
				"     store: 'postgres',",
				"     isolationLevel: 'READ_COMMITTED') ~> person2",
				"person1, person2 union(byName: true)~> personsjoin",
				"personsjoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     tableName: 'persons12',",
				"     schemaName: 'public',",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     store: 'postgres',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> person12"
			]
		}
	}
}