{
	"name": "df_point_vad",
	"properties": {
		"folder": {
			"name": "Test"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzurePostgreSql1",
						"type": "LinkedServiceReference"
					},
					"name": "pointstagging"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzurePostgreSql1",
						"type": "LinkedServiceReference"
					},
					"name": "poindvad"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          uu_id as string,",
				"          osm_id as long,",
				"          lat as integer,",
				"          lon as integer,",
				"          geometrytext as string,",
				"          geometry as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     tableName: 'point_stagging',",
				"     schemaName: 'public',",
				"     store: 'postgres',",
				"     isolationLevel: 'READ_COMMITTED') ~> pointstagging",
				"pointstagging sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          osm_id as long,",
				"          metadata as string,",
				"          geometrytext as string,",
				"          geometry as string",
				"     ),",
				"     format: 'table',",
				"     tableName: 'point_vad',",
				"     schemaName: 'public',",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     store: 'postgres',",
				"     postSQLs:['update point_vad\\nset geometry = ST_GeomFromText(geometrytext)\\n'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          id = uu_id,",
				"          osm_id,",
				"          geometrytext",
				"     )) ~> poindvad"
			]
		}
	}
}